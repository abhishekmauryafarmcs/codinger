<?php
require_once '../config/session.php';
require_once '../config/db.php';

// Check if user is logged in and is an admin
if (!isAdminSessionValid()) {
    header("Location: login.php?error=invalid_credentials");
    exit();
}

$errors = [];
$success = false;

// Get contest ID
if (!isset($_GET['id'])) {
    header("Location: manage_contests.php");
    exit();
}

$contest_id = (int)$_GET['id'];

// Initialize variables
$title = '';
$description = '';
$start_time = '';
$end_time = '';
$allowed_tab_switches = 0;
$prevent_copy_paste = 0;
$prevent_right_click = 0;
$max_submissions = 0;
$problems = array();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get form data
    $title = trim($_POST['title']);
    $description = trim($_POST['description']);
    $start_time = $_POST['start_time'];
    $end_time = $_POST['end_time'];
    $allowed_tab_switches = isset($_POST['allowed_tab_switches']) ? intval($_POST['allowed_tab_switches']) : 0;
    $prevent_copy_paste = isset($_POST['prevent_copy_paste']) ? 1 : 0;
    $prevent_right_click = isset($_POST['prevent_right_click']) ? 1 : 0;
    $max_submissions = isset($_POST['max_submissions']) ? intval($_POST['max_submissions']) : 0;
    $problems = isset($_POST['problems']) ? $_POST['problems'] : [];

    // Validation
    if (empty($title)) $errors[] = "Title is required";
    if (empty($description)) $errors[] = "Description is required";
    if (empty($start_time)) $errors[] = "Start time is required";
    if (empty($end_time)) $errors[] = "End time is required";
    if (empty($problems)) $errors[] = "At least one problem is required";

    // Validate dates
    $start = new DateTime($start_time);
    $end = new DateTime($end_time);
    if ($end <= $start) {
        $errors[] = "End time must be after start time";
    }

    if (empty($errors)) {
        $conn->begin_transaction();

        try {
            // Update contest details
            $stmt = $conn->prepare("UPDATE contests SET 
                title = ?, 
                description = ?, 
                start_time = ?, 
                end_time = ?, 
                allowed_tab_switches = ?, 
                prevent_copy_paste = ?, 
                prevent_right_click = ?,
                max_submissions = ? 
                WHERE id = ?");
            $stmt->bind_param("ssssiiiis", 
                $title, 
                $description, 
                $start_time, 
                $end_time, 
                $allowed_tab_switches, 
                $prevent_copy_paste, 
                $prevent_right_click,
                $max_submissions, 
                $contest_id
            );
            $stmt->execute();

            // Update problems
            if (isset($_POST['selected_problems'])) {
                // First, delete existing problem associations
                $stmt = $conn->prepare("DELETE FROM contest_problems WHERE contest_id = ?");
            $stmt->bind_param("i", $contest_id);
            $stmt->execute();

                // Then insert new ones
                if (!empty($_POST['selected_problems'])) {
                    $stmt = $conn->prepare("INSERT INTO contest_problems (contest_id, problem_id) VALUES (?, ?)");
                    foreach ($_POST['selected_problems'] as $problem_id) {
                        $stmt->bind_param("ii", $contest_id, $problem_id);
                    $stmt->execute();
                    }
                }
            }

            $conn->commit();
            header("Location: manage_contests.php?updated=1");
            exit();

        } catch (Exception $e) {
            $conn->rollback();
            $errors[] = "Error updating contest: " . $e->getMessage();
        }
    }
    
    // Get current problems in this contest (in case form submission fails)
    $stmt = $conn->prepare("SELECT p.id, p.title, p.description, p.points FROM problems p JOIN contest_problems cp ON p.id = cp.problem_id WHERE cp.contest_id = ?");
    $stmt->bind_param("i", $contest_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $current_problems = [];
    while ($row = $result->fetch_assoc()) {
        $current_problems[] = $row;
    }

    // Get all problems (needed for the form even after POST)
    $stmt = $conn->prepare("SELECT id, title, description, points FROM problems");
    $stmt->execute();
    $result = $stmt->get_result();
    $all_problems = [];
    while ($row = $result->fetch_assoc()) {
        $all_problems[] = $row;
    }

    // Selected problem IDs
    $selected_problem_ids = isset($_POST['selected_problems']) ? $_POST['selected_problems'] : [];
    
} else {
    // Get contest details from database
    $stmt = $conn->prepare("SELECT * FROM contests WHERE id = ?");
    $stmt->bind_param("i", $contest_id);
    $stmt->execute();
    $contest = $stmt->get_result()->fetch_assoc();

    // Get current problems in this contest
    $stmt = $conn->prepare("SELECT p.id, p.title, p.description, p.points FROM problems p JOIN contest_problems cp ON p.id = cp.problem_id WHERE cp.contest_id = ?");
    $stmt->bind_param("i", $contest_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $current_problems = [];
    while ($row = $result->fetch_assoc()) {
        $current_problems[] = $row;
    }

    // Get all problems
    $stmt = $conn->prepare("SELECT id, title, description, points FROM problems");
    $stmt->execute();
    $result = $stmt->get_result();
    $all_problems = [];
    while ($row = $result->fetch_assoc()) {
        $all_problems[] = $row;
    }

    // Selected problem IDs
    $selected_problem_ids = array_map(function($problem) {
        return $problem['id'];
    }, $current_problems);

        $title = $contest['title'];
        $description = $contest['description'];
        $start_time = $contest['start_time'];
        $end_time = $contest['end_time'];
        $allowed_tab_switches = $contest['allowed_tab_switches'];
        $prevent_copy_paste = $contest['prevent_copy_paste'];
        $prevent_right_click = $contest['prevent_right_click'];
        $max_submissions = $contest['max_submissions'];
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Contest - Codinger</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/style.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="index.php">Codinger</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link <?php echo basename($_SERVER['PHP_SELF']) == 'index.php' ? 'active' : ''; ?>" href="index.php">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <?php echo (basename($_SERVER['PHP_SELF']) == 'manage_contests.php' || basename($_SERVER['PHP_SELF']) == 'edit_contest.php') ? 'active' : ''; ?>" href="manage_contests.php">Manage Contests</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <?php echo basename($_SERVER['PHP_SELF']) == 'create_contest.php' ? 'active' : ''; ?>" href="create_contest.php">Create Contest</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <?php echo basename($_SERVER['PHP_SELF']) == 'manage_problems.php' ? 'active' : ''; ?>" href="manage_problems.php">Manage Problems</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <?php echo basename($_SERVER['PHP_SELF']) == 'students.php' ? 'active' : ''; ?>" href="students.php">Manage Students</a>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link">Welcome, <?php echo isset($_SESSION['admin']['full_name']) ? htmlspecialchars($_SESSION['admin']['full_name']) : 'Administrator'; ?></span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="../logout.php">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container py-4">
        <h1 class="mb-4">Edit Contest</h1>

        <?php if (!empty($errors)): ?>
            <div class="alert alert-danger">
                <ul class="mb-0">
                    <?php foreach ($errors as $error): ?>
                        <li><?php echo htmlspecialchars($error); ?></li>
                    <?php endforeach; ?>
                </ul>
            </div>
        <?php endif; ?>

        <form method="POST">
            <div class="card mb-4">
                <div class="card-body">
                    <h3 class="card-title">Contest Details</h3>
                    
                    <div class="mb-3">
                        <label for="title" class="form-label">Contest Title</label>
                        <input type="text" class="form-control" id="title" name="title" required 
                               value="<?php echo htmlspecialchars($title); ?>">
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="3" required><?php echo htmlspecialchars($description); ?></textarea>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="start_time" class="form-label">Start Time</label>
                            <input type="datetime-local" class="form-control" id="start_time" name="start_time" required
                                   value="<?php echo date('Y-m-d\TH:i', strtotime($start_time)); ?>">
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="end_time" class="form-label">End Time</label>
                            <input type="datetime-local" class="form-control" id="end_time" name="end_time" required
                                   value="<?php echo date('Y-m-d\TH:i', strtotime($end_time)); ?>">
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <h3 class="card-title">Advanced Settings</h3>
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="allowed_tab_switches" class="form-label">Number of Allowed Tab Switches</label>
                            <input type="number" class="form-control" id="allowed_tab_switches" name="allowed_tab_switches" min="0" 
                                   value="<?php echo htmlspecialchars($allowed_tab_switches); ?>">
                            <div class="form-text">Set to 0 to completely prevent tab switching. Set a higher number to allow students a limited number of tab switches.</div>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="max_submissions" class="form-label">Maximum Submissions per Problem</label>
                            <input type="number" class="form-control" id="max_submissions" name="max_submissions" min="0" 
                                   value="<?php echo htmlspecialchars($max_submissions); ?>">
                            <div class="form-text">Set to 0 for unlimited submissions. Set a specific number to limit how many times a student can submit each problem.</div>
                        </div>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="prevent_copy_paste" name="prevent_copy_paste" 
                               <?php echo $prevent_copy_paste ? 'checked' : ''; ?>>
                        <label class="form-check-label" for="prevent_copy_paste">
                            Prevent Copy-Paste
                        </label>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="prevent_right_click" name="prevent_right_click" 
                               <?php echo $prevent_right_click ? 'checked' : ''; ?>>
                        <label class="form-check-label" for="prevent_right_click">
                            Prevent Right Click
                        </label>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <h3 class="card-title">Problem Selection</h3>
                    <p>Select problems for this contest:</p>
                    
                    <div class="row problem-container">
                        <?php foreach ($all_problems as $problem): ?>
                            <?php $isSelected = in_array($problem['id'], $selected_problem_ids); ?>
                            <div class="col-md-6 mb-3">
                                <div class="card problem-card <?php echo $isSelected ? 'selected' : ''; ?>" 
                                     data-problem-id="<?php echo $problem['id']; ?>">
                                    <div class="card-body">
                                        <h5 class="card-title"><?php echo htmlspecialchars($problem['title']); ?></h5>
                                        <p class="card-text"><?php echo substr(htmlspecialchars($problem['description']), 0, 100) . '...'; ?></p>
                                        <span class="problem-points"><?php echo $problem['points']; ?> pts</span>
                                        <input type="checkbox" name="selected_problems[]" value="<?php echo $problem['id']; ?>" 
                                            <?php echo $isSelected ? 'checked' : ''; ?> class="problem-checkbox">
                                    </div>
                                </div>
                            </div>
                        <?php endforeach; ?>
                    </div>
                </div>
            </div>

            <button type="submit" name="update_contest" class="btn btn-primary mb-4">Update Contest</button>
            <a href="manage_contests.php" class="btn btn-link mb-4">Cancel</a>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Make problem cards clickable to select/deselect
            const problemCards = document.querySelectorAll('.problem-card');
            problemCards.forEach(card => {
                card.addEventListener('click', function() {
                    const checkbox = this.querySelector('input[type="checkbox"]');
                    checkbox.checked = !checkbox.checked;
                    this.classList.toggle('selected');
                });
                
                // Prevent checkboxes from triggering card click
                const checkbox = card.querySelector('input[type="checkbox"]');
                checkbox.addEventListener('click', function(e) {
                    e.stopPropagation();
                    card.classList.toggle('selected');
                });
            });
        });
    </script>
    
    <style>
        .problem-card {
            cursor: pointer;
            transition: all 0.2s ease;
            border: 2px solid transparent;
        }
        .problem-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .problem-card.selected {
            background-color: #d4edda;
            border-color: #28a745;
        }
        .problem-points {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: #007bff;
            color: white;
            padding: 3px 8px;
            border-radius: 20px;
            font-size: 0.8rem;
        }
        .problem-checkbox {
            position: absolute;
            bottom: 10px;
            right: 10px;
        }
    </style>
</body>
</html> 